import axios from 'axios';
import { getFlag } from './helpers.js';

const bitFlip = (pos, bit, data) => {
  // decode
  let decoded = atob(data);
  const splitted = decoded.split('');

  splitted[pos] = String.fromCharCode(splitted[pos].charCodeAt(0) ^ bit);

  decoded = splitted.join('');

  // encode
  return btoa(decoded);
};

(async () => {
  const encrypted =
    'NFJKc3VPNGdDZXM0SmlnUXFpSEtqUHJ6UHN1UjdkWDIwVllCQ0RXMEd6ZkNPV0pxNDYvRzVsbEVDK3hudEw4aFF2WFdUN2Juc200TEozV2ZyT0EwclpqQVBobnM5RE1nUk5ISkdSWlNaL0h6alUva25NMzc2Vk9yZ09lWTNUL2Y=';

  let promises = [];
  for (let i = 13; i < 14; i++) {
    for (let j = 0; j < 128; j++) {
      const flipped = bitFlip(i, j, encrypted);
      promises.push(
        axios.get('http://mercury.picoctf.net:43275/', {
          headers: {
            Cookie: `auth_name=${flipped}`,
          },
          withCredentials: true,
        })
      );
    }
  }

  const responses = await Promise.all(promises);
  responses.some(({ data }) => {
    if (data.includes('picoCTF{')) {
      console.log(getFlag(data));
      return true;
    }
  });
})();
